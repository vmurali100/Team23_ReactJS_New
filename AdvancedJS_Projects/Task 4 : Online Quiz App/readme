# Online Quiz App

## Overview
The Online Quiz App is an interactive web application that dynamically generates quizzes using questions fetched from an external API. It incorporates advanced JavaScript concepts such as closures for managing timers, dynamic imports for handling different question types, and web workers for scoring calculations.

---

## Features

### Core Features
- **Dynamic Question Fetching**:
  - Retrieve quiz questions from the [Open Trivia Database](https://opentdb.com/) API.
- **Timer Management**:
  - Closures are used to encapsulate timer logic for each question.
- **Randomized Questions**:
  - Randomize the order of answers to make the quiz more challenging.
- **Answer Validation**:
  - Validate user answers and calculate scores dynamically.

### Advanced Features
- **Web Workers**:
  - Calculate scores asynchronously without blocking the main thread.
- **Error Handling**:
  - Manage API errors gracefully using `try...catch`.
- **Dynamic Imports**:
  - Modular handling of question types and categories.

---

## Technologies Used
- **HTML**: For structuring the quiz interface.
- **JavaScript**: For dynamic quiz functionality.
  - **Closures**: Manage quiz timers.
  - **Web Workers**: Perform score calculations in a separate thread.
  - **Fetch API**: Retrieve questions from the server.
  - **Dynamic Imports**: Load question modules on demand.
- **Tailwind CSS**: For clean and responsive UI design.

---

## Getting Started

### Prerequisites
Ensure you have the following installed:
- A modern web browser (Google Chrome, Firefox, etc.)
- A code editor (VS Code, Sublime Text, etc.)

### Installation
1. Clone the repository or download the source code.
2. Open the project directory.
3. Open the `index.html` file in your web browser.

---

## Usage

1. **Start the Quiz**:
   - Open the application to begin the quiz.
   - Questions will be fetched dynamically.

2. **Answer Questions**:
   - Select an answer and click "Next" to move to the next question.

3. **Timer**:
   - Each question has a 15-second timer.
   - If the timer runs out, the question will be skipped automatically.

4. **Score Calculation**:
   - At the end of the quiz, your score will be displayed, calculated using a web worker.

---

## Project Structure

```
Online Quiz App/
├── index.html       # Main HTML file
├── app.js           # JavaScript file with core functionality
├── README.md        # Project documentation
└── tailwind.css     # Tailwind CSS (via CDN)
```

---

## Key Concepts

1. **Closures**:
   - Used to encapsulate and manage the timer logic for each quiz question.

2. **Web Workers**:
   - Offloads heavy calculations (e.g., score calculation) to a separate thread, improving performance.

3. **Dynamic Imports**:
   - Modularize functionality, allowing easy extension of question types or categories.

4. **Fetch API**:
   - Retrieve questions dynamically from an external API.

5. **Error Handling**:
   - Ensures a smooth user experience even in case of API or network failures.

---

## Future Enhancements

- **Category Selection**:
  - Allow users to choose quiz categories dynamically.
- **Leaderboard**:
  - Implement a leaderboard to track scores of multiple users.
- **User Authentication**:
  - Add user accounts to save quiz progress and scores.
- **Media Questions**:
  - Include images or videos in quiz questions.

---

## License
This project is open-source and free to use for educational and non-commercial purposes.

---

## Acknowledgments
- Built with Tailwind CSS for modern and responsive design.
- Inspired by interactive quiz platforms like Kahoot and Quizizz.


