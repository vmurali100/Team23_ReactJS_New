# Movie Ticket Booking System

## Overview
The Movie Ticket Booking System is an interactive web application designed to manage a theater's seating arrangements dynamically. It leverages advanced JavaScript concepts such as closures for managing seat bookings, debouncing for input optimization, and asynchronous programming using `fetch` and `async/await`. Users can view seat availability, book and cancel tickets, and synchronize bookings with the server.

---

## Features

### Core Features
- **Dynamic Seat Management**:
  - Display seats with color-coded availability (green for available, red for booked).
  - Book and cancel tickets dynamically.
- **Seat Availability Fetching**:
  - Retrieve seat availability data from a server.
- **Bulk Actions**:
  - Confirm and cancel all bookings with a single click.

### Advanced Features
- **Closures for Seat Booking**:
  - Encapsulate logic for managing seat states (booked/available).
- **Debouncing for Input Optimization**:
  - Optimize movie search queries with debounced input handling.
- **Dynamic Rendering**:
  - Render theater layout dynamically based on seat data.

---

## Technologies Used
- **HTML**: For structuring the application interface.
- **JavaScript**: For dynamic functionality.
  - **Closures**: Manage seat booking state securely.
  - **Debouncing**: Optimize input handling for search queries.
  - **Fetch API**: Retrieve and update seat availability from a server.
- **Tailwind CSS**: For responsive and modern UI design.

---

## Getting Started

### Prerequisites
Ensure you have the following installed:
- A modern web browser (Google Chrome, Firefox, etc.)
- A code editor (VS Code, Sublime Text, etc.)

### Installation
1. Clone the repository or download the source code.
2. Open the project directory.
3. Open the `index.html` file in your web browser.

---

## Usage

1. **View Seat Layout**:
   - Seats are displayed in a grid with color-coded availability (green for available, red for booked).

2. **Book a Seat**:
   - Click on a green (available) seat to book it. The seat turns red to indicate it is booked.

3. **Cancel a Booking**:
   - Click on a red (booked) seat to cancel the booking. The seat turns green to indicate it is available again.

4. **Bulk Actions**:
   - Use the "Confirm Booking" button to finalize all bookings.
   - Use the "Cancel Booking" button to reset all bookings.

5. **Search Movies**:
   - Enter a query in the search bar to simulate movie search functionality with debounced input handling.

---

## Project Structure

```
Movie Ticket Booking System/
├── index.html       # Main HTML file
├── app.js           # JavaScript file with core functionality
├── README.md        # Project documentation
└── tailwind.css     # Tailwind CSS (via CDN)
```

---

## Key Concepts

1. **Closures**:
   - Used to encapsulate seat booking logic, ensuring secure state management for each seat.

2. **Debouncing**:
   - Implements input optimization for search queries, improving user experience by reducing redundant operations.

3. **Asynchronous Programming**:
   - Fetch seat availability and handle server communication with `fetch` and `async/await`.

4. **Dynamic Rendering**:
   - Updates the UI in real-time as seats are booked or canceled.

---

## Future Enhancements

- **Real-Time Updates**:
  - Synchronize seat availability across multiple users in real-time.
- **Payment Integration**:
  - Integrate a payment gateway for ticket purchases.
- **Search Functionality**:
  - Implement a fully functional movie search feature.
- **Enhanced Seat Layout**:
  - Include seat categories (e.g., premium, standard) with pricing.

---

## License
This project is open-source and free to use for educational and non-commercial purposes.

---

## Acknowledgments
- Built with Tailwind CSS for modern and responsive design.
- Inspired by real-world movie booking systems.

